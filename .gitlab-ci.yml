image: docker:17.06

stages:
    - test

test-codereview:
    stage: test
    environment: testing
    script:
        - docker run --rm --tty --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc --env CODECLIMATE_CODE="$PWD" --env CONTAINER_TIMEOUT_SECONDS=3600 codeclimate/codeclimate:0.78.1 analyze -e phpmd -e eslint -f html > codereview.html && cat codereview.html | grep -i 'no issue'
    artifacts:
        when: always
        paths: [codereview.html]
    only:
        - testing

test-unitary:
    services:
        - rabbitmq:3.6-management
    stage: test
    environment: testing
    before_script:
        - find . -type d -exec chmod 755 {} +
        - find . -type f -exec chmod 644 {} +
        - find ./ci -type f -exec chmod 755 {} +
    script:
        - mkdir -v test
        - cp -pv composer.json test
        - cp -rpv ci test
        - docker run --rm --tty --volume $PWD:/app --workdir /app/test composer:1.7 install --ignore-platform-reqs --no-scripts --no-progress
        - cp -rpv test/vendor/codeigniter/framework/* test
        - sed -i 's~$config\[\x27composer_autoload\x27\] = FALSE;~$config["composer_autoload"] = FCPATH."vendor/autoload.php";~' test/application/config/config.php
        - mkdir -p test/vendor/romainrg/rabbitmq_client
        - cp -rpv libraries test/vendor/romainrg/rabbitmq_client
        - cp -rpv config test/vendor/romainrg/rabbitmq_client
        - cp -rpv helpers test/vendor/romainrg/rabbitmq_client
        - cp -rpv tests test
        - ls -l /app/test
        - ls -l /app/test/application/controllers
        - ls -l /app/test/application/config
    only:
        - testing
